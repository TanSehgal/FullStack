import React, { useState } from "react";

function App() {
  // üìö Initial book list
  const [books, setBooks] = useState([
    { id: 1, title: "The Great Gatsby", author: "F. Scott Fitzgerald" },
    { id: 2, title: "To Kill a Mockingbird", author: "Harper Lee" },
    { id: 3, title: "1984", author: "George Orwell" },
  ]);

  const [searchTerm, setSearchTerm] = useState("");
  const [newTitle, setNewTitle] = useState("");
  const [newAuthor, setNewAuthor] = useState("");

  // ‚ûï Add new book
  const handleAddBook = (e) => {
    e.preventDefault();
    if (newTitle.trim() === "" || newAuthor.trim() === "") {
      alert("Please enter both title and author!");
      return;
    }

    const newBook = {
      id: Date.now(),
      title: newTitle.trim(),
      author: newAuthor.trim(),
    };

    setBooks([...books, newBook]);
    setNewTitle("");
    setNewAuthor("");
  };

  // ‚ùå Remove a book
  const handleRemoveBook = (id) => {
    setBooks(books.filter((book) => book.id !== id));
  };

  // üîç Filtered list
  const filteredBooks = books.filter(
    (book) =>
      book.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      book.author.toLowerCase().includes(searchTerm.toLowerCase())
  );

  // üé® Inline styles
  const styles = {
    container: {
      maxWidth: "600px",
      margin: "40px auto",
      padding: "20px",
      background: "#f9f9f9",
      borderRadius: "8px",
      boxShadow: "0 4px 10px rgba(0,0,0,0.1)",
      fontFamily: "Arial, sans-serif",
    },
    heading: {
      textAlign: "center",
      color: "#333",
    },
    searchBox: {
      width: "100%",
      padding: "10px",
      marginBottom: "15px",
      border: "1px solid #ccc",
      borderRadius: "6px",
      fontSize: "16px",
    },
    form: {
      display: "flex",
      gap: "10px",
      marginBottom: "20px",
    },
    input: {
      flex: 1,
      padding: "8px",
      border: "1px solid #ccc",
      borderRadius: "6px",
      fontSize: "14px",
    },
    buttonAdd: {
      backgroundColor: "#2e8b57",
      color: "#fff",
      border: "none",
      padding: "8px 15px",
      borderRadius: "6px",
      cursor: "pointer",
    },
    list: {
      listStyle: "none",
      padding: 0,
    },
    listItem: {
      display: "flex",
      justifyContent: "space-between",
      alignItems: "center",
      backgroundColor: "#fff",
      padding: "12px",
      marginBottom: "10px",
      borderRadius: "6px",
      boxShadow: "0 2px 5px rgba(0,0,0,0.05)",
    },
    removeBtn: {
      backgroundColor: "#c0392b",
      color: "white",
      border: "none",
      padding: "6px 10px",
      borderRadius: "4px",
      cursor: "pointer",
    },
  };

  return (
    <div style={styles.container}>
      <h1 style={styles.heading}>üìö Library Management</h1>

      {/* üîç Search Input */}
      <input
        type="text"
        placeholder="Search by title or author..."
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
        style={styles.searchBox}
      />

      {/* ‚ûï Add Book Form */}
      <form onSubmit={handleAddBook} style={styles.form}>
        <input
          type="text"
          placeholder="Book Title"
          value={newTitle}
          onChange={(e) => setNewTitle(e.target.value)}
          style={styles.input}
        />
        <input
          type="text"
          placeholder="Author"
          value={newAuthor}
          onChange={(e) => setNewAuthor(e.target.value)}
          style={styles.input}
        />
        <button type="submit" style={styles.buttonAdd}>
          Add
        </button>
      </form>

      {/* üìã Book List */}
      <ul style={styles.list}>
        {filteredBooks.length > 0 ? (
          filteredBooks.map((book) => (
            <li key={book.id} style={styles.listItem}>
              <div>
                <strong>{book.title}</strong> <br />
                <small>by {book.author}</small>
              </div>
              <button
                onClick={() => handleRemoveBook(book.id)}
                style={styles.removeBtn}
              >
                Remove
              </button>
            </li>
          ))
        ) : (
          <p>No books found.</p>
        )}
      </ul>
    </div>
  );
}

export default App;
